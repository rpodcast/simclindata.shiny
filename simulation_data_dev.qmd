---
title: "Simulating trial using NIHPO Web App"
format: html
---

```{r}
#| label: setup
#| include: false
library(DBI)
library(RSQLite)
library(dplyr)
library(tidyr)
library(haven)
library(readr)

# define directory for simulated data output files
data_dir <- "data/synth_dev_files"
```


## [Synthetic PHR](https://portal.nihpo.com/synthphr)

Creating a new synthetic PHR works by specifying a country and the number of subjects. For my virtual trial, the goal is to include multiple countries to mimic a real-world trial.

For testing the interface, I will create the following countries and number of subjects

-   United States: 20
-   Canada: 20
-   China: 10
-   France: 15

![](figures/synthetic_phr_dev.png)

Next the interface asks for demographic information to use in the simulations

-   Gender Distribution: 54 Percent Female, 46 Percent Male

-   Age Range: Minimum Age 18, Maximum Age 55

-   Drug Regulator: FDA

-   Device Regulator: FDA

-   Drugs Randomization: Totally Random

File created: `synth_phr_dev.sqlite3`

```{r}
#| label: synth_phr_explore

con_phr <- DBI::dbConnect(
  RSQLite::SQLite(),
  dbname = file.path(data_dir, "synth_phr_dev.sqlite3")
)
```

Here are the tables generated in the database file:

```{r}
#| label: synth_phr_tables
#| echo: false

DBI::dbListTables(con_phr)
```
Here is a glance at a few of the tables.

The `sqlite_sequence` table simply gives the number of rows present in each of the actual data tables.

```{r}
tbl(con_phr, "sqlite_sequence") %>%
  collect()
```

```{r}
tbl(con_phr, "Synth_PHR_Demographics") %>%
  collect()
```

## [Synthetic Trial](https://portal.nihpo.com/synthtrial)

This is a complex interface to leverage the previously-generated PHR profiles and build an actual clinical trial.

**HEADS UP**: I was not able to get the interface to accept the custom json file as written by jsonlite. Need to investigate if it's a formatting issue or not.

### Trial Summary Parameters

* PHR Files: `synth_phr_dev.sqlite3`
* Clinical Study Sponsor (free text): Galactic Federation
* Study ID (free text): SR388
* Trial Name (free text): Metroid1
* Start and end dates (date picker): 2020-03-01 , 2021-03-01
* Number of sites per country: 3

### Planned Parameters

* Planned Number of Subjects: 40
* Planned Number of Arms: 3
* __Need Clarification__ Number of Groups/Cohorts (The number of groups or cohorts that are part of the study): 3
* Length observation for each subject (Planned length of observation for a single subject): 84 days (12 weeks). This is automatically translated to ISO 8601 format. Hence an entry is 84 is translated to `P84D`.
* Trial Primary Objective (free text): EFFICACY
* Trial Secondary Objective (free text): SAFETY
* Trial Type (Dropdown) (The nature of the interventianal study for which information is collected: EFFICACY
* Study Type (Dropdown) (The nature of the investigation for which study information is being collected): INTERVENTIONAL
* Therapeutic Area (Free Text) (A knowledge field that focuses on research and development of specific treatments for diseases and pathologic findings; as well as prevention of condictions that negatively impact the health of an individual): IMMUNOLOGY
* __Need Clarification__ Study Stop Rules (Free text) (The rule, regulation and/or condition that determines the point in time when a clnical trial will be terminated): NO
* Trial Blinding Scheme (Dropdown) (The type of experimental design used to describe the level of awareness of the clinical trial subjects and/or investigators of the intervention(s) that they are receiving and/or administering): DOUBLE BLIND
* Control Type (Dropdown) (Comparetor against which the study treatment is evaluated): PLACEBO
* Trial Phase Classification (Dropdown) (Any defined stage in the lifecycle of a clinical trial): PHASE III TRIAL
* Primary Outcome Measure (Free text) (The outcome measure(s) of greatest importance specified in the protocol, usually the one(s) used in the power calculation, to evalute the primary endpoint(s) associated with the primary study objective(s)): PHAZON
* Adaptive Design (free text) (Indicate if the study includes a prospectively planned opportunity for modification of one or more specified aspects of the study design and hypotheses based on the analysis of data (usually interim data) from subjects in the study.): NO
* Data Cutoff Date (Date picker) (A date which indicated any data collected by this data will be used for analysis): 2020-12-31
* Data Cutoff Description (Free Text) (Text that describes the cutoff date): PRIMARY LOCK
* Registry Identifier (Free Text) (Identification numbers assigned to the protocol by clinicaltrials.gov, EudraCT, or other registries): NCT8675309

### Indicators

Here are the check boxes I enabled:

* Randomized

### SDTM Versions

* SDTM IG Version (Free Text) (The version of the CDISC Study Data Tabulation Model guide that is being used in the study submission): 3.4
* SDTM Version (Free Text) (The version of the CDISC Study Data Tabulation Model that is being used in the study submission.): 2.0

### Upload file with Sponsor-specific Controlled Terminology

This interface allows us to customize our own non-standard variable codelist. A sample JSON is located in the data directory, but I don't think I need to make a new version of this so I chose the option **Use default Sponsor-specific CT**

### Upload file with Arms, Elements, and Visits

This part lets us customize the treatment arms and visits information. A sample file is available in the data directory. Below is the content of the readme that was part of the default format export.

Primers:

* [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) for duration. Example needed for the duration files looks like `P14D` : P is designator for period, 14 is the length, and D is the "day" designator for the duration. Other possible values are W (week), M (month), Y (Year) 
* Within the specific ARMS dictionary, each specific arm must have their ELEMENTS vector be the same length as the number of items in the VISITS dictionary.

#### Format README

This document covers the usage of the `arms_elements_visits.json` file.

- The file must be in JSON format where the keys are: `ARMS`, `ELEMENTS`

- The value of `ELEMENTS` key must be a dictionary with the names of the elements needed.

- The value of each element name key must be another dictionary with the following keys:
	* ELEMENT_CODE: Code of the element name (no more than 8 characters)
	* TRANSITION_CONDITION: Conditions for transitioning to this element (If the trial design allows a subject to transition to an element other than the next element in sequence)
	* START_CONDITION: Condition for beginning element.
	* FINISH_CONDITION: Condition for ending element.
	* DURATION: Planned duration of element in ISO 8601 format.
	* EPOCH: Name of the trial epoch with which this element of the arm is associated.
Allowable values for EPOCH: BASELINE, BLINDED TREATMENT, CONTINUATION TREATMENT, FOLLOW-UP, INDUCTION TREATMENT, LONG-TERM FOLLOW-UP, OBSERVATION, OPEN LABEL TREATMENT, RUN-IN, SCREENING, TREATMENT, WASHOUT

(FINISH_CONDITION/DURATION: At least one of them must be populated)

- The value of `ARMS` key must be a dictionary with the names of the arms needed.

- The value of each arm name key must be another dictionary with the following keys:
	* ARM_CODE: Code of the arm name (no more than 8 characters)
	* ARM_CONDITION: Condition subject met to be included in this arm
	* ELEMENTS: List of elements in this arms, in order of appearance
	* VISITS: Dict of visits

- The value of each visit key must be a dictionary with the followings keys:
	* PLANNED_DAY_VISIT: Planned study day of visit. Due to its sequential nature.
	* START_RULE: Rule describing when the visit starts, in relation to the sequence of elements.
	* END_RULE: Rule describing when the visit ends, in relation to the sequence of elements.


#### Creating a custom arms/elements mapping

```{r}
arms_elements <- list(
  ELEMENTS = list(
    Screen = list(
      ELEMENT_CODE = "SCRN",
      TRANSITION_CODE = "",
      START_CONDITION = "informed consent",
      FINISH_CONDITION = "2 weeks after start of element",
      DURATION = "P14D",
      EPOCH = "SCREENING"
    ),
    Placebo = list(
      ELEMENT_CODE = "PLA",
      TRANSITION_CODE = "",
      START_CONDITION = "First dose of a treatment Epoch, where dose is placebo",
      FINISH_CONDITION = "2 weeks after start of element",
      DURATION = "P14D",
      EPOCH = "TREATMENT"
    ),
    Chozo5mg = list(
      ELEMENT_CODE = "CH5MG",
      TRANSITION_CODE = "",
      START_CONDITION = "First dose of a treatment Epoch, where dose is 5 mg drug",
      FINISH_CONDITION = "2 weeks after start of element",
      DURATION = "P14D",
      EPOCH = "TREATMENT"
    ),
    Chozo10mg = list(
      ELEMENT_CODE = "CH10MG",
      TRANSITION_CODE = "",
      START_CONDITION = "First dose of a treatment Epoch, where dose is 10 mg drug",
      FINISH_CONDITION = "2 weeks after start of element",
      DURATION = "P14D",
      EPOCH = "TREATMENT"
    ),
    Rest = list(
      ELEMENT_CODE = "REST",
      TRANSITION_CODE = "",
      START_CONDITION = "48 hrs after last dose of preceding treatment Epoch",
      FINISH_CONDITION = "1 week after start of Element",
      DURATION = "P7D",
      EPOCH = "WASHOUT"
    ),
    Followup = list(
      ELEMENT_CODE = "FU",
      TRANSITION_CODE = "",
      START_CONDITION = "48 hrs after last dose of treatment Epoch",
      FINISH_CONDITION = "3 weeks after start of Element",
      DURATION = "P21D",
      EPOCH = "FOLLOW-UP"
    )
  ),
  ARMS = list(
    Placebo = list(
      ARM_CODE = "PLA",
      ARM_CONDITION = "Randomized to Placebo",
      ELEMENTS = c("Screen", "Placebo", "Followup"),
      VISITS = list(
        `1` = list(
          PLANNED_DAY_VISIT = "3",
          START_RULE = "Start of Screen Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `2` = list(
          PLANNED_DAY_VISIT = "5",
          START_RULE = "30 minutes before end of Screen Epoch",
          END_RULE = "20 minutes after start of Run-in Epoch"
        ),
        `3` = list(
          PLANNED_DAY_VISIT = "7",
          START_RULE = "1 week after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `4` = list(
          PLANNED_DAY_VISIT = "14",
          START_RULE = "2 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `5` = list(
          PLANNED_DAY_VISIT = "21",
          START_RULE = "3 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `6` = list(
          PLANNED_DAY_VISIT = "28",
          START_RULE = "4 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        )
      )
    ),
    Chozo5mg = list(
      ARM_CODE = "CH5MG",
      ARM_CONDITION = "Randomized to Chozo5mg",
      ELEMENTS = c("Screen", "Chozo5mg", "Followup"),
      VISITS = list(
        `1` = list(
          PLANNED_DAY_VISIT = "3",
          START_RULE = "Start of Screen Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `2` = list(
          PLANNED_DAY_VISIT = "5",
          START_RULE = "30 minutes before end of Screen Epoch",
          END_RULE = "20 minutes after start of Run-in Epoch"
        ),
        `3` = list(
          PLANNED_DAY_VISIT = "7",
          START_RULE = "1 week after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `4` = list(
          PLANNED_DAY_VISIT = "14",
          START_RULE = "2 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `5` = list(
          PLANNED_DAY_VISIT = "21",
          START_RULE = "3 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `6` = list(
          PLANNED_DAY_VISIT = "28",
          START_RULE = "4 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        )
      )
    ),
    Chozo10mg = list(
      ARM_CODE = "CH10MG",
      ARM_CONDITION = "Randomized to Chozo10mg",
      ELEMENTS = c("Screen", "Chozo10mg", "Followup"),
      VISITS = list(
        `1` = list(
          PLANNED_DAY_VISIT = "3",
          START_RULE = "Start of Screen Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `2` = list(
          PLANNED_DAY_VISIT = "5",
          START_RULE = "30 minutes before end of Screen Epoch",
          END_RULE = "20 minutes after start of Run-in Epoch"
        ),
        `3` = list(
          PLANNED_DAY_VISIT = "7",
          START_RULE = "1 week after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `4` = list(
          PLANNED_DAY_VISIT = "14",
          START_RULE = "2 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `5` = list(
          PLANNED_DAY_VISIT = "21",
          START_RULE = "3 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        ),
        `6` = list(
          PLANNED_DAY_VISIT = "28",
          START_RULE = "4 weeks after start of Treatment Epoch",
          END_RULE = "1 hour after start of Visit"
        )
      )
    )
  )
)

# write to json file
jsonlite::write_json(
  arms_elements, 
  path = file.path(data_dir, "arms_elements_custom.json"),
  auto_unbox = TRUE,
  pretty = TRUE
)
```



```{r}
arms_json <- jsonlite::fromJSON(file.path(data_dir, "arms_elements_visits_sample.json"))
listviewer::jsonedit(arms_json)
```

## Explore trial sqlite DB

```{r}
con_trial <- DBI::dbConnect(
  RSQLite::SQLite(),
  dbname = file.path(data_dir, "synth_trial_alt5.sqlite3")
)

DBI::dbListTables(con_trial)
```

### Grabbing trial design params

I want to see how those settings in the arms/elements json file map to the actual data sets generated. The JSON file used was `arms_elements_visits_alt.json`

```{r}
synth_sv <- tbl(con_trial, "CDISC_SDTM_SV") %>%
  collect()

synth_sv_meta <- tbl(con_trial, "CDISC_SDTM_Definition_SV") %>%
  collect()

synth_sv
```

```{r}
synth_ta <- tbl(con_trial, "CDISC_SDTM_TA") %>%
  collect()

synth_ta
```

```{r}
synth_td <- tbl(con_trial, "CDISC_SDTM_TD") %>%
  collect()

synth_td
```


```{r}
#| label: visit-explore

synth_tv <- tbl(con_trial, "CDISC_SDTM_TV") %>%
  collect()

synth_tv_meta <- tbl(con_trial, "CDISC_SDTM_Definition_TV") %>%
  collect()

synth_tv
```

We have three visits for each treatment group. That makes sense as the json file only included three time points in the visits dictionary within the arms dictionary.

```{r}
synth_te <- tbl(con_trial, "CDISC_SDTM_TE") %>%
  collect()

synth_te
```

Many of the settings specified in the trial simulation portion of the web UI are contained in the `TS` (Trial Summary) data set. 

```{r}
synth_ts <- tbl(con_trial, "CDISC_SDTM_TS") %>%
  collect() %>%
  select(TSPARM, TSVAL)

synth_ts
```

```{r}
synth_ti <- tbl(con_trial, "CDISC_SDTM_TI") %>%
  collect()

synth_ti
```


```{r}
synth_dm <- tbl(con_trial, "CDISC_SDTM_DM") %>%
  collect()

synth_dm
```

```{r}
synth_ds <- tbl(con_trial, "CDISC_SDTM_DS") %>%
  collect()

synth_ds
```

```{r}
synth_se <- tbl(con_trial, "CDISC_SDTM_SE") %>%
  collect()

synth_se
```

```{r}
synth_lb <- tbl(con_trial, "CDISC_SDTM_LB") %>%
  collect()

synth_lb
```

```{r}
synth_ex <- tbl(con_trial, "CDISC_SDTM_EX") %>%
  collect()

synth_ex
```

```{r}
synth_eg <- tbl(con_trial, "CDISC_SDTM_EG") %>%
  collect()

synth_eg
```

